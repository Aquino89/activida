package com.mx.Microservicios.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.mx.Microservicios.Entity.HUEMPLS;
import com.mx.Microservicios.Service.HUEMPLSServiceImp;

@RestController
@RequestMapping("/api/HU_EMPLS")
@CrossOrigin("*")
public class HUEMPLSWS {
	
	@Autowired
	private HUEMPLSServiceImp service;
	
	// Listar
	// http://localhost:8001/HU_EMPLS/listar
	@GetMapping("/listar")
	public ResponseEntity<List<HUEMPLS>> getAllHUEMPLS() { 
		List<HUEMPLS> lista = service.getAllHUEMPLS();
		if(lista.isEmpty()) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
		}
		return ResponseEntity.status(HttpStatus.OK).body(lista);
	}
	
	// Buscar por id
	// http://localhost:8001/HU_EMPLS/buscar/1
	@GetMapping("/buscar/{id}")
	public ResponseEntity<HUEMPLS> getHUEMPLSById(@PathVariable Long id) {
		HUEMPLS hue = service.getHUEMPLSById(id);
		if(hue == null) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
		}
		return ResponseEntity.status(HttpStatus.OK).body(hue);
	}
	
	// crear
	// http://localhost:8001/HU_EMPLS/crear
	@PostMapping("/crear")
	public ResponseEntity<HUEMPLS> createHUEMPLS(@RequestBody HUEMPLS huempls) {
		HUEMPLS hue = service.createHUEMPLS(huempls);
		if(hue == null) {
			return ResponseEntity.status(HttpStatus.CREATED).build();
		}
		return ResponseEntity.status(HttpStatus.CREATED).body(hue);
	} 
	
	
	// Editar
	// http://localhost:8001/HU_EMPLS/editar
	@PutMapping("/editar/{id}")
	public ResponseEntity<HUEMPLS> updateHUEMPLS(@PathVariable Long id, @RequestBody HUEMPLS huempls) {
		HUEMPLS hue = service.updateHUEMPLS(id, huempls);
		if(hue == null) {
			return ResponseEntity.status(HttpStatus.CREATED).build();
		}
		return ResponseEntity.status(HttpStatus.CREATED).body(hue);
	}
	
	// Eliminar
	// http://localhost:8001/HU_EMPLS/eliminar
	@DeleteMapping("/eliminar/{idNuMemp}")
	public ResponseEntity<Void> deleteHUEMPLS(@PathVariable Long idNuMemp) {
		service.deleteHUEMPLS(idNuMemp);
		return ResponseEntity.status(HttpStatus.NO_CONTENT).build();
	}
	
	// Buscar por numCia y numEmp
	// http://localhost:8001/HU_EMPLS/buscar/1/1
	@GetMapping("/filter")
	public ResponseEntity<HUEMPLS> getHUEMPLSByFilters(@RequestParam Integer numCia, @RequestParam Integer numEmp) {
		HUEMPLS hue = service.getHUEMPLSByFilters(numCia, numEmp);
		if(hue == null) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
		}
		return ResponseEntity.status(HttpStatus.OK).body(hue);
	}
	
	// Buscar por numCia y cveMoneda
	// http://localhost:8001/HU_EMPLS/buscar/1/USD
	@GetMapping("by-moneda")
	public ResponseEntity<List<HUEMPLS>> getHUEMPLSByHUCATMONEDA(@RequestParam Integer numCia, @RequestParam String claveMoneda) {
		List<HUEMPLS> lista = service.getHUEMPLSByHUCATMONEDA(numCia, claveMoneda);
		if(lista.isEmpty()) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
		}
		return ResponseEntity.status(HttpStatus.OK).body(lista);
	}
	
	

}
